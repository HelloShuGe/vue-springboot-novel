package com.yayanovel.mapper;

import com.yayanovel.entity.Novel;
import com.yayanovel.entity.NovelExample;
import java.util.List;

import com.yayanovel.entity.UserInfo;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
@Mapper
public interface NovelMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    long countByExample(NovelExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    int deleteByExample(NovelExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    int deleteByPrimaryKey(Long novelId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    int insert(Novel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    int insertSelective(Novel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    List<Novel> selectByExample(NovelExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    Novel selectByPrimaryKey(Long novelId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    int updateByExampleSelective(@Param("record") Novel record, @Param("example") NovelExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    int updateByExample(@Param("record") Novel record, @Param("example") NovelExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    int updateByPrimaryKeySelective(Novel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table novel
     *
     * @mbg.generated Sun Aug 07 21:47:23 CST 2022
     */
    int updateByPrimaryKey(Novel record);

    /**
     * 全量查询小说
     * @return
     */
    List<Novel> searchNovelAll();

    /**
     * 插入小说简介
     * @param introduction
     * @param novelName
     * @return
     */
    int insertIntroduction(String introduction, String novelName);

    /**
     * 查询热门小说
     * @return
     */
    List<UserInfo> selectHotNovel();

    /**
     * 模糊查询小说
     * @param searchWord
     * @return
     */
    List<Novel> searchNovel(String searchWord);

    /**
     * 查询连载小说
     * @return
     */
    List<Novel> searchOngoingNovel();

    /**
     * 查询完结小说
     * @return
     */
    List<Novel> searchCompletedNovel();

    /**
     * 根据小说类别查询小说
     * @param catogary
     * @return
     */
    List<Novel> searchCatogaryNovel(String catogary);

    /**
     * 根据小说名字查询小说
     * @param novelName
     * @return
     */
    Novel selectUuidByName(String novelName);

    /**
     * 根据用户email查询书架的东西
     * @param userEmail
     * @return
     */
    List<Novel> getLibaryNovel(String userEmail);

}